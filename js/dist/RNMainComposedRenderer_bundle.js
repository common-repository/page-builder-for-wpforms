rndefine("#RNMainComposedRenderer",["#RNMainRNPage/RendererBase.Model","#RNMainCore/Sanitizer","#RNMainRNPage/RendererBase","#RNMainCore/EventManager"],(function(e,t,r,s){"use strict";class a extends r.RendererBase{constructor(e){super(e),this.state={}}SubRender(){return React.createElement("div",null,this.props.Model.Rows.map((e=>e.Render())))}}a.defaultProps={},s.EventManager.Subscribe("GetFieldRendererModel",(e=>{if("Composed"==e.Field.RendererType)return new d(e.Block,e.Field,e.Data)}));class n extends React.Component{constructor(e){super(e),this.state={}}render(){return React.createElement("div",{style:{width:this.props.Model.CalculateWidth()}},React.createElement("input",{autoComplete:"off",type:"text",style:{width:"100%"},value:this.props.Model.GetStringValue()}),this.MaybeGetLabel())}MaybeGetLabel(){let e=this.props.Model.ItemSetting.Label;return""!=e?React.createElement("label",{className:"itemLabel",style:{verticalAlign:"top"}},e):null}}n.defaultProps={};class i{constructor(e,t,r){this.Parent=e,this.ItemSetting=t,this.Data=r}GetStringValue(){var e;return t.Sanitizer.GetStringValueFromPath(null===(e=this.Data)||void 0===e?void 0:e.Value,this.ItemSetting.Path)}get IsEmpty(){return""==this.GetStringValue()}Render(){return React.createElement(n,{Model:this})}CalculateWidth(){let e=this.Parent.Items.length;return"calc("+Math.round(100/e*100)/100+"% - 2px)"}}class o extends React.Component{constructor(e){super(e),this.state={}}render(){return React.createElement("div",{className:"composedRow"},this.props.Model.Items.map((e=>e.Render())))}}o.defaultProps={};class l{constructor(e,t,r){this.Parent=e,this.RowSetting=t,this.Data=r,this.Items=[];for(let e of this.RowSetting.Items)this.Items.push(new i(this,e,r))}get IsEmpty(){return this.Items.some((e=>!e.IsEmpty))}Render(){return React.createElement(o,{Model:this})}}class d extends e.RendererBaseModel{constructor(e,t,r){super(e,t,r),this.Rows=[];for(let e of t.Rows)this.Rows.push(new l(this,e,r))}Render(){return React.createElement(a,{Model:this})}GetOptions(){return this.Field.Items}GetValues(){return t.Sanitizer.SanitizeStringArray(t.Sanitizer.GetValueFromPath(this.Data,["Values"]))}}exports.ComposedRendererModel=d,exports.ComposedRenderer=a}));
